  实际开发中难买会遇到 一些比较DT的兼容性问题，在此做一个收录总结，集合成一个查阅手册。
  
## 1.IOS下日期格式问题
一般的浏览器都支持类似于: 
let date = new Date(2017-09-28);
但是在IOS下这样转换日期会发生错误，具体原因是IOS不支持横杆'-'形式的日期，需要将其转换成斜杠'/'形式的日期方可。
let date = new Date(2017/09/28);  //在安卓或者其它浏览器下也是支持这种格式的


2.iframe的同源网址限制问题
<iframe src=""></iframe>
在iframe的src标签中,如果打开网页www.baidu.com是会失败的,需要给网址添加请求协议http或者https,比如
<iframe src="http://www.baidu.com"></iframe>
这样就能顺利的打开网页了。
这是iframe下的一个限制,就是在iframe中打开非同源网站,需要添加网址中的网络协议: http


3.获取scrollTop的兼容写法
IE6/7/8下获取scrollTop:    document.body.scrollTop;
Safari下获取scrollTop:     window.pageYOffset;   //一般情况下不作考虑
标准浏览器下获取scrollTop:  document.documentElement.scrollTop;

兼容性写法为:
let scrollTop = document.documentElement.scrollTop || window.pageYOffset || document.body.scrollTop;  //顺序不可变更


4.移动端固定定位问题
在移动端,通过position:fixed;定位的元素,在软键盘被唤起之后,fixed定位会失效。
解决办法是有input等能够获取焦点唤起键盘的布局中，不使用固定定位,使用position: absolute;代替。


5.IOS下事件绑定问题。
IOS下不允许将事件直接绑定到document或者body上,这给需要进行事件委托的需求造成了一定的困难。
解决办法有:
1.如果在document或者body上绑定了事件,则在需要响应事件的元素上添加CSS  cursor:pointer;这样能够委托成功
2.将目标元素(即响应事件的元素)改成a标签或者button元素。


6.移动端点透事件。
假设有A、B两个两个元素，A元素在B元素的上面，它们Z轴重叠，且B元素有绑定clik事件(或者说B元素有默认的click事件,比如a标签)。
当我们在A元素上绑定了touchstart事件后，当点击A元素,则隐藏A元素。
当点击A元素之后,B元素身上的click事件被触发了，这就是移动端的点透事件。
点透事件产生的几个要素是：
a.A/B两个层上下Z轴重叠
b.上层的A元素点击后消失或者移开(这个要素要有)
c.B元素身上有默认的click事件(比如a标签),或者说B元素身上绑定了click事件
在这种情况下,就会产生点透事件。

点透事件产生的原因
在移动端,事件的触发顺序为： touchstart -> touchend -> click
且touchstart和click的触发条件分别为:
touchstart: 在这个DOM（或冒泡到这个DOM）上手指触摸开始即能立即触发
click: 在这个DOM（或冒泡到这个DOM）上手指触摸开始，且手指未曾在屏幕上移动（某些浏览器允许移动一个非常小的位移值），且在这个在这个dom上手指离开屏幕，
且触摸和离开屏幕之间的间隔时间较短（某些浏览器不检测间隔时间，也会触发click）才能触发。
click的延迟时间大概是在300ms左右,正是因为它会延迟,且由于它的触发机制的问题,造成了在符合这些条件情况下的点透事件问题。

解决方案
a.在B元素没有默认click事件的情况下,应该使用统一的事件，即在B元素上也绑定touchstart事件,而不是click事件;
b.在B元素存在默认click事件的情况下,应该及时阻止A元素的默认点击事件, ev.preventDefault();


6.IOS下input控件点击黑色背景问题。
在ios下，如果给一个input控件设置了点击选中状态下active状态的背景图片，会发现，整个input框的背景是一片黑色。
解决办法是给input框添加css样式: background-color: transparent; //设置背景色为透明


7.IOS下的click失效问题。
在ios下，click事件有时候会出现失效的问题，特别是click事件绑定在input等控件上,click事件会出现非常奇怪的现象。可能需要长按或者重一点的点击,才能触发
这些元素的click事件，用户体验非常不好。
解决办法就是,在IOS下使用touch事件,给input元素绑定touchend事件来代替click事件，这样可以解决click事件的触发问题。


8.IOS下iframe的设置问题。
在ios下，如果把iframe作为一个页面容器，来存放载入其他的页面，会出现一个问题，就是iframe被截断，无法显示完整的外部链接网站。所以，需要对ios下的iframe
做一个特别的设置。
假设我们的HTML解构是这样的:
<div class="wrap">
  <iframe class="iframe"></iframe>
</div>
动态的JS设置如下:
let meta = navigator.userAgent;
let reg = /iPad|iPhone/i;
if(reg.test(meta)) {                //判断是IOS环境下才进行此设置
  let iframeBox = document.querySelector('.wrap');
  let iframe = document.querySelector('.iframe');
  
  iframeBox.style.overflowX = 'hidden';
  iframeBox.style.overflowY = 'scroll';
  iframeBox.style.webkitOverflowScrolling = 'touch';
}


9.IOS下如果页面中同时使用了iframe和position:fixed定位,则固定定位失效。
类似如下HTML:
<body>
  <div>this div is fixed</div>
  <iframe></iframe>
</body>

div是一个固定定位的元素,则在此情况下固定定位失效.
解决办法是改成绝对定位。


10.






